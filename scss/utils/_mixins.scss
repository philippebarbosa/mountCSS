// // ****************************************************************
// _Fontface mixin : Create a font face with a one line mixin
// e.g. : @include font-face(["Samplina Neue"], fonts/SamplinaNeue, bold, italic);
// *******************************************************************

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// // ****************************************************************
// _Retina mixin : Retina background image with classic fallback
// e.g. : @include retina-background-image("images/logo.png", "png", 120px, 80px);
// *******************************************************************
@mixin retina-background-image($file, $type, $width, $height) {
  background-image: url($file + '.' + $type);
  @media ("only screen and (-webkit-min-device-pixel-ratio: 2),
          only screen and (min--moz-device-pixel-ratio: 2),
          only screen and (-o-min-device-pixel-ratio: 2/1),
          only screen and (min-device-pixel-ratio: 2),
          only screen and (min-resolution: 192dpi),
          only screen and (min-resolution: 2dppx)")
  {
    background-image: url($file + '@2x.' + $type);
    @include background-size($width, $height);
  }
}


// // ****************************************************************
// _Arrow : Simply creates an arrow on a box
// e.g. : @include arrow($side, $align, $size, $color, $borderColor, $borderSize);
// ****************************************************************

@mixin arrow_helper($arrowSize, $arrowColor, $margin, $side, $align) {
  @if $side == "top" {
    border-bottom-color: $arrowColor;
    top: -2 * $arrowSize;
  }
  @if $side == "bottom" {
    border-top-color: $arrowColor;
    bottom: -2 * $arrowSize;
  }
  @if $side == "left" {
    border-right-color: $arrowColor;
    left: -2 * $arrowSize;
  }
  @if $side == "right" {
    border-left-color: $arrowColor;
    right: -2 * $arrowSize;
  }
  @if $side == "right" or $side == "left" {
    @if $align == "center" {
      top: 50%;
      margin-top: -$arrowSize;
    }
    @else if $align == "top" {
      top: $margin;
    }
    @else if $align == "bottom" {
      bottom: $margin;
    }
  }
  @if $side == "bottom" or $side == "top" {
    @if $align == "center" {
      right: 50%;
      margin-right: -$arrowSize;
    }
    @else if $align == "left" {
      left: $margin;
    }
    @else if $align == "right" {
      right: $margin;
    }
  }
}

@mixin arrow($side: "right", $align: "center", $size: 1rem, $color: #f6f6f6, $borderColor: "none", $borderSize: 3px) {
  $selector: "&:after, &:before";
  @if $borderColor == "none" {
    $selector: "&:after";
  }
  #{$selector} {
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    visibility: visible;
  }

  &:after {
    border-width: $size;
    @include arrow_helper($size, $color, $size, $side, $align);
  }

  @if $borderColor != "none" {
    &:before {
      border-width: $borderSize + $size;
      @include arrow_helper($size + $borderSize, $borderColor, $size - $borderSize, $side, $align);
    }
  }
}

// ****************************************************************
//
// _Boxshadow : Some simple drop shadows mixin, in case you'll need it
// e.g. : .youBox { @extend %dsBottom; }
//
// ****************************************************************


%bsBottom {
    box-shadow: 0 10px 6px -6px #777;
}
/* _each Side
---------------------------------- */

%bsSided {
    // base element need to be at position: relative;
    position: relative;
    &:before, &:after {
        z-index: -1;
        position: absolute;
        content: "";
        bottom: 15px;
        left: 10px;
        width: 50%;
        top: 80%;
        max-width: 300px;
        background: #777;
        box-shadow: 0 15px 10px #777;
        transform: rotate(-3deg);
    }
    &:after {
        transform: rotate(3deg);
        right: 10px;
        left: auto;
    }
}
/* _Left Side Only
---------------------------------- */

%bsSideLeft {
    position: relative;
    &:before {
        z-index: -1;
        position: absolute;
        content: "";
        bottom: 15px;
        left: 10px;
        width: 50%;
        top: 80%;
        max-width: 300px;
        background: #777;
        box-shadow: 0 15px 10px #777;
        transform: rotate(-3deg);
    }
}
/* _Right Side Only
---------------------------------- */

%bsSideRight {
    position: relative;
    &:after {
        z-index: -1;
        position: absolute;
        content: "";
        bottom: 15px;
        right: 10px;
        left: auto;
        width: 50%;
        top: 80%;
        max-width: 300px;
        background: #777;
        box-shadow: 0 15px 10px #777;
        transform: rotate(3deg);
    }
}
/* _Relief
---------------------------------- */

%bsRelief {
    position: relative;
    &:before, &:after {
        z-index: -1;
        position: absolute;
        content: "";
        bottom: 25px;
        left: 10px;
        width: 50%;
        top: 80%;
        max-width: 300px;
        background: #777;
        box-shadow: 0 35px 20px #777;
        transform: rotate(-8deg);
    }
    &:after {
        -webkit-transform: rotate(8deg);
        -moz-transform: rotate(8deg);
        -o-transform: rotate(8deg);
        -ms-transform: rotate(8deg);
        transform: rotate(8deg);
        right: 10px;
        left: auto;
    }
}

%bsReliefBoth {
    position: relative;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset;
    &:before, &:after {
        content: "";
        position: absolute;
        z-index: -1;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.8);
        top: 0;
        bottom: 0;
        left: 10px;
        right: 10px;
        border-radius: 100px / 10px;
    }
    &:after {
        right: 10px;
        left: auto;
        transform: skew(8deg) rotate(3deg);
    }
}

// ****************************************************************
//
// _Clearfix : Does it need to be explained ? :)
//
// ****************************************************************

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
